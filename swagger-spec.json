{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginPayload" }
            }
          }
        },
        "responses": {
          "201": { "description": "Successful Login" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/login-google": {
      "get": {
        "operationId": "AuthController_loginGoogle",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/login-github": {
      "get": {
        "operationId": "AuthController_loginGithub",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/login-facebook": {
      "get": {
        "operationId": "AuthController_facebookGithub",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/google/callback": {
      "get": {
        "operationId": "AuthController_googleCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/github/callback": {
      "get": {
        "operationId": "AuthController_githubCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/facebook/callback": {
      "get": {
        "operationId": "AuthController_facebookCallback",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/changePassword": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ResetPayload" }
            }
          }
        },
        "responses": {
          "201": { "description": "Successful Reset" },
          "400": { "description": "Bad Request" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "operationId": "AuthController_registerUser",
        "summary": "Register a user and send mail verification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegisterEmailPayload" }
            }
          }
        },
        "responses": { "403": { "description": "Forbidden" } },
        "tags": ["Auth"]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "operationId": "AuthController_getLoggedInUser",
        "parameters": [],
        "responses": {
          "200": { "description": "Successful Response" },
          "401": { "description": "Unauthorized" }
        },
        "tags": ["Auth"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/{id}": {
      "delete": {
        "operationId": "deleteOneBaseUserControllerUserEntity",
        "summary": "Delete a single UserEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserEntity" }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBaseUserControllerUserEntity",
        "summary": "Update a single UserEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserEntity" }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getOneBaseUserControllerUserEntity",
        "summary": "Retrieve a single UserEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserEntity" }
              }
            }
          }
        },
        "tags": ["Users"]
      },
      "put": {
        "operationId": "replaceOneBaseUserControllerUserEntity",
        "summary": "Replace a single UserEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserEntity" }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    },
    "/api/v1/user": {
      "post": {
        "operationId": "createOneBaseUserControllerUserEntity",
        "summary": "Create a single UserEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserEntity" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserEntity" }
              }
            }
          }
        },
        "tags": ["Users"]
      },
      "get": {
        "operationId": "getManyBaseUserControllerUserEntity",
        "summary": "Retrieve multiple UserEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManyUserEntityResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Users"]
      }
    },
    "/api/v1/user/bulk": {
      "post": {
        "operationId": "createManyBaseUserControllerUserEntity",
        "summary": "Create multiple UserEntities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyUserEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/UserEntity" }
                }
              }
            }
          }
        },
        "tags": ["Users"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/user/{id}/books": {
      "get": {
        "operationId": "UserController_getBooks",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "200": { "description": "" } },
        "tags": ["Users"]
      },
      "post": {
        "operationId": "UserController_createBookByUserId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookPayload" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Users"]
      }
    },
    "/api/v1/books/{id}": {
      "delete": {
        "operationId": "deleteOneBaseBookControllerBookEntity",
        "summary": "Delete a single BookEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookEntity" }
              }
            }
          }
        },
        "tags": ["Books"],
        "security": [{ "bearer": [] }]
      },
      "patch": {
        "operationId": "updateOneBaseBookControllerBookEntity",
        "summary": "Update a single BookEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookEntity" }
              }
            }
          }
        },
        "tags": ["Books"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getOneBaseBookControllerBookEntity",
        "summary": "Retrieve a single BookEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookEntity" }
              }
            }
          }
        },
        "tags": ["Books"]
      },
      "put": {
        "operationId": "replaceOneBaseBookControllerBookEntity",
        "summary": "Replace a single BookEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookEntity" }
              }
            }
          }
        },
        "tags": ["Books"]
      }
    },
    "/api/v1/books": {
      "post": {
        "operationId": "createOneBaseBookControllerBookEntity",
        "summary": "Create a single BookEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/BookEntity" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BookEntity" }
              }
            }
          }
        },
        "tags": ["Books"],
        "security": [{ "bearer": [] }]
      },
      "get": {
        "operationId": "getManyBaseBookControllerBookEntity",
        "summary": "Retrieve multiple BookEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManyBookEntityResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Books"]
      }
    },
    "/api/v1/books/bulk": {
      "post": {
        "operationId": "createManyBaseBookControllerBookEntity",
        "summary": "Create multiple BookEntities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyBookEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/BookEntity" }
                }
              }
            }
          }
        },
        "tags": ["Books"],
        "security": [{ "bearer": [] }]
      }
    },
    "/api/v1/books/upload": {
      "post": {
        "operationId": "BookController_updloadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": { "type": "string", "format": "binary" }
                }
              }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Books"]
      }
    },
    "/api/v1/purchases/all-books": {
      "get": {
        "operationId": "PurchaseController_getPurchase",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      }
    },
    "/api/v1/purchases/{id}/discount": {
      "post": {
        "operationId": "PurchaseController_newDiscount",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/DiscountPayload" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      }
    },
    "/api/v1/purchases/discounts": {
      "get": {
        "operationId": "PurchaseController_getAllDiscount",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      }
    },
    "/api/v1/purchases/{id}": {
      "get": {
        "operationId": "getOneBasePurchaseControllerPurchaseEntity",
        "summary": "Retrieve a single PurchaseEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      },
      "patch": {
        "operationId": "updateOneBasePurchaseControllerPurchaseEntity",
        "summary": "Update a single PurchaseEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      },
      "put": {
        "operationId": "replaceOneBasePurchaseControllerPurchaseEntity",
        "summary": "Replace a single PurchaseEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      },
      "delete": {
        "operationId": "deleteOneBasePurchaseControllerPurchaseEntity",
        "summary": "Delete a single PurchaseEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      }
    },
    "/api/v1/purchases": {
      "get": {
        "operationId": "getManyBasePurchaseControllerPurchaseEntity",
        "summary": "Retrieve multiple PurchaseEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManyPurchaseEntityResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      },
      "post": {
        "operationId": "createOneBasePurchaseControllerPurchaseEntity",
        "summary": "Create a single PurchaseEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PurchaseEntity" }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      }
    },
    "/api/v1/purchases/bulk": {
      "post": {
        "operationId": "createManyBasePurchaseControllerPurchaseEntity",
        "summary": "Create multiple PurchaseEntities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyPurchaseEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/PurchaseEntity" }
                }
              }
            }
          }
        },
        "tags": ["Purchases"],
        "security": [{ "basic": [] }]
      }
    },
    "/api/v1/chats": {
      "get": {
        "operationId": "getManyBaseChatControllerChatEntity",
        "summary": "Retrieve multiple ChatEntities",
        "parameters": [
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "s",
            "description": "Adds search condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#search\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "filter",
            "description": "Adds filter condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#filter\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "or",
            "description": "Adds OR condition. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#or\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "sort",
            "description": "Adds sort by field. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#sort\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "limit",
            "description": "Limit amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#limit\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "offset",
            "description": "Offset amount of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#offset\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "page",
            "description": "Page portion of resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#page\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer" }
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get paginated response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManyChatEntityResponseDto"
                }
              }
            }
          }
        },
        "tags": ["Chats"]
      },
      "post": {
        "operationId": "createOneBaseChatControllerChatEntity",
        "summary": "Create a single ChatEntity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatEntity" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatEntity" }
              }
            }
          }
        },
        "tags": ["Chats"]
      }
    },
    "/api/v1/chats/user": {
      "get": {
        "operationId": "ChatController_getUsersWithMessages",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Chats"]
      }
    },
    "/api/v1/chats/{id}": {
      "get": {
        "operationId": "getOneBaseChatControllerChatEntity",
        "summary": "Retrieve a single ChatEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "fields",
            "description": "Selects resource fields. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#select\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": false
          },
          {
            "name": "join",
            "description": "Adds relational resources. <a href=\"https://github.com/nestjsx/crud/wiki/Requests#join\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } },
            "style": "form",
            "explode": true
          },
          {
            "name": "cache",
            "description": "Reset cache (if was enabled). <a href=\"https://github.com/nestjsx/crud/wiki/Requests#cache\" target=\"_blank\">Docs</a>",
            "required": false,
            "in": "query",
            "schema": { "type": "integer", "minimum": 0, "maximum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Get one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatEntity" }
              }
            }
          }
        },
        "tags": ["Chats"]
      },
      "patch": {
        "operationId": "updateOneBaseChatControllerChatEntity",
        "summary": "Update a single ChatEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatEntity" }
              }
            }
          }
        },
        "tags": ["Chats"]
      },
      "put": {
        "operationId": "replaceOneBaseChatControllerChatEntity",
        "summary": "Replace a single ChatEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatEntity" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatEntity" }
              }
            }
          }
        },
        "tags": ["Chats"]
      },
      "delete": {
        "operationId": "deleteOneBaseChatControllerChatEntity",
        "summary": "Delete a single ChatEntity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete one base response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatEntity" }
              }
            }
          }
        },
        "tags": ["Chats"]
      }
    },
    "/api/v1/chats/bulk": {
      "post": {
        "operationId": "createManyBaseChatControllerChatEntity",
        "summary": "Create multiple ChatEntities",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateManyChatEntityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Get create many base response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/ChatEntity" }
                }
              }
            }
          }
        },
        "tags": ["Chats"]
      }
    }
  },
  "info": {
    "title": "Scalable NestJS v8 Boilerplate",
    "description": "Nest template with preconfigured libraries",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    { "name": "Auth", "description": "" },
    { "name": "Users", "description": "" },
    { "name": "Books", "description": "" },
    { "name": "Purchases", "description": "" },
    { "name": "Chats", "description": "" }
  ],
  "servers": [{ "url": "/api/v1" }],
  "components": {
    "securitySchemes": {
      "bearer": { "scheme": "bearer", "bearerFormat": "JWT", "type": "http" }
    },
    "schemas": {
      "LoginPayload": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "example": "user" },
          "password": { "type": "string", "example": "admin" }
        },
        "required": ["username", "password"]
      },
      "ResetPayload": {
        "type": "object",
        "properties": {
          "username": { "type": "string" },
          "currentPassword": { "type": "string" },
          "newPassword": { "type": "string" },
          "confirmPassword": { "type": "string" }
        },
        "required": [
          "username",
          "currentPassword",
          "newPassword",
          "confirmPassword"
        ]
      },
      "RegisterEmailPayload": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "example": "mengty" },
          "firstname": { "type": "string", "example": "mengty" },
          "lastname": { "type": "string", "example": "lim" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "passwordConfirmation": { "type": "string" }
        },
        "required": [
          "username",
          "firstname",
          "lastname",
          "email",
          "password",
          "passwordConfirmation"
        ]
      },
      "GetManyUserEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserEntity" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "UserEntity": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "uniqueItems": true,
            "example": "mengty"
          },
          "firstname": { "type": "string" },
          "lastname": { "type": "string" },
          "email": {
            "type": "string",
            "uniqueItems": true,
            "example": "@gmail.com"
          },
          "password": {
            "type": "string",
            "uniqueItems": true,
            "example": "11111111"
          }
        },
        "required": ["username", "firstname", "lastname", "email", "password"]
      },
      "CreateManyUserEntityDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/UserEntity" }
          }
        },
        "required": ["bulk"]
      },
      "BookPayload": {
        "type": "object",
        "properties": {
          "title": { "type": "string", "example": "c++" },
          "dateOfPublished": {
            "type": "string",
            "example": "2024-06-30T06:46:28.244Z"
          },
          "category": { "type": "string", "example": "book" }
        },
        "required": ["title", "dateOfPublished", "category"]
      },
      "GetManyBookEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BookEntity" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "BookEntity": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "dateOfPublished": { "type": "string" },
          "category": { "type": "string" },
          "isbn": { "type": "string" },
          "doi": { "type": "string" }
        },
        "required": ["title", "dateOfPublished", "category", "isbn", "doi"]
      },
      "CreateManyBookEntityDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BookEntity" }
          }
        },
        "required": ["bulk"]
      },
      "DiscountPayload": {
        "type": "object",
        "properties": { "price": { "type": "number", "example": "111" } },
        "required": ["price"]
      },
      "GetManyPurchaseEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PurchaseEntity" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "PurchaseEntity": {
        "type": "object",
        "properties": { "price": { "type": "number" } },
        "required": ["price"]
      },
      "CreateManyPurchaseEntityDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PurchaseEntity" }
          }
        },
        "required": ["bulk"]
      },
      "GetManyChatEntityResponseDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ChatEntity" }
          },
          "count": { "type": "number" },
          "total": { "type": "number" },
          "page": { "type": "number" },
          "pageCount": { "type": "number" }
        },
        "required": ["data", "count", "total", "page", "pageCount"]
      },
      "ChatEntity": { "type": "object", "properties": {} },
      "CreateManyChatEntityDto": {
        "type": "object",
        "properties": {
          "bulk": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ChatEntity" }
          }
        },
        "required": ["bulk"]
      }
    }
  }
}
